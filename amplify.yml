version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "🚀 Iniciando preBuild do AI Crypto Trading..."
        - echo "📦 Versão do Node.js:" && node --version
        - echo "📦 Versão do npm:" && npm --version
        
        # Configurar Git de forma segura
        - echo "🔧 Configurando Git..."
        - git config --global user.email "build@amplify.com" || echo "Git config falhou, continuando..."
        - git config --global user.name "Amplify Build" || echo "Git config falhou, continuando..."
        
        # Instalar Bun globalmente
        - echo "📦 Instalando Bun..."
        - npm install -g bun || (echo "⚠️ Falha ao instalar Bun, usando npm..." && export USE_NPM=true)
        
        # Verificar variáveis de ambiente essenciais
        - echo "🔐 Verificando variáveis de ambiente..."
        - |
          if [ -z "$DATABASE_URL" ]; then
            echo "⚠️ AVISO: DATABASE_URL não configurada - usando modo mock"
            export DATABASE_URL="file:./dev.db"
          else
            echo "✅ DATABASE_URL configurada"
          fi
        - |
          if [ -z "$NEXTAUTH_SECRET" ]; then
            echo "⚠️ AVISO: NEXTAUTH_SECRET não configurada - gerando temporária"
            export NEXTAUTH_SECRET="amplify-build-temp-secret-$(date +%s)"
          else
            echo "✅ NEXTAUTH_SECRET configurada"
          fi
        - |
          if [ -z "$NEXT_PUBLIC_BINANCE_API_KEY" ]; then
            echo "⚠️ AVISO: NEXT_PUBLIC_BINANCE_API_KEY não configurada"
            export NEXT_PUBLIC_BINANCE_API_KEY="demo-key"
          else
            echo "✅ NEXT_PUBLIC_BINANCE_API_KEY configurada"
          fi
        
        # Gerar Prisma Client se possível
        - echo "🗄️ Configurando Prisma..."
        - |
          if [ -f "prisma/schema.prisma" ]; then
            echo "📄 Schema Prisma encontrado, gerando client..."
            npx prisma generate || echo "⚠️ Falha ao gerar Prisma Client - usando mock"
          else
            echo "ℹ️ Schema Prisma não encontrado - usando configuração mock"
          fi
        
        # Instalar dependências
        - echo "📦 Instalando dependências..."
        - |
          if [ "$USE_NPM" = "true" ]; then
            npm ci
          else
            bun install --frozen-lockfile || npm ci
          fi
        
        - echo "📝 Gerando arquivo .env.production a partir das variáveis de ambiente do Amplify"
        # Exporta variáveis privadas e públicas que devem estar disponíveis em runtime (SSR e API Routes)
        - |
          env | grep -E '^(DATABASE_URL|NEXTAUTH_URL|NEXTAUTH_SECRET|JWT_SECRET|MAILERSEND_API_TOKEN|ADMIN_EMAIL|BINANCE_API_KEY|BINANCE_API_SECRET|NEXT_PUBLIC_)' >> .env.production
        - echo "📄 Conteúdo final de .env.production:"
        - cat .env.production
        
        - echo "✅ preBuild concluído com sucesso!"
        
    build:
      commands:
        - echo "🏗️ Iniciando build do Next.js..."
        
        # Verificar versões
        - echo "📦 Verificando ambiente de build..."
        - npx next --version || echo "Next.js não encontrado"
        - echo "🔧 Node.js:" && node --version
        
        # Configurações de otimização
        - echo "⚙️ Configurando otimizações..."
        - export NODE_OPTIONS="--max-old-space-size=4096"
        - export NEXT_TELEMETRY_DISABLED=1
        
        # Build da aplicação
        - echo "🏗️ Executando build..."
        - |
          if [ "$USE_NPM" = "true" ]; then
            npm run build
          else
            bun run build || npm run build
          fi
        
        # Verificar se o build foi bem-sucedido
        - echo "✅ Verificando resultado do build..."
        - |
          if [ ! -d ".next" ]; then
            echo "❌ ERRO: Build falhou - diretório .next não encontrado"
            ls -la
            exit 1
          fi
        - |
          if [ ! -f ".next/BUILD_ID" ]; then
            echo "❌ ERRO: Build incompleto - BUILD_ID não encontrado"
            ls -la .next/
            exit 1
          fi
        
        - echo "✅ Build concluído com sucesso!"
        - echo "📊 Estatísticas do build:"
        - du -sh .next/
        - echo "📁 Arquivos gerados:"
        - find .next -name "*.js" -o -name "*.css" | head -10
        
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
      - ~/.bun/install/cache/**/*
